<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="grp.faq.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="grp.faq.entity.Comment" >
    <constructor >
      <idArg column="C_COMID" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="C_UID" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="C_CONTEXT" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="C_CREATE_TIME" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="C_IS_DELETE" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="C_COM_TYPE" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="C_COMMON_ID" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    C_COMID, C_UID, C_CONTEXT, C_CREATE_TIME, C_IS_DELETE, C_COM_TYPE, C_COMMON_ID
  </sql>
<!--  def addComment(comment: Comment): Int-->
  <insert id="addComment" parameterType="grp.faq.entity.Comment">
    insert into
        faq.TB_COMMENT(C_COMID, C_UID, C_CONTEXT, C_CREATE_TIME, C_IS_DELETE, C_COM_TYPE, C_COMMON_ID)
    values(
           #{cComid}, #{cUid}, #{cContext}, NOW(), 0, #{cComType}, #{cCommonId}
          )
  </insert>
<!--  def getComment(commentType: Int, commentId: Int): util.List[util.Map[Object, Object]]-->
  <select id="getComment" resultType="java.util.Map">
    select
        TB_USER.C_USERNAME, TB_COMMENT.C_CONTEXT, TB_USER.C_UID, TB_USER.C_SCORE,
      <if test="commentType==2">
          TB_ANSWER.C_ANSID
      </if>
      <if test="commentType==1">
          TB_ARTICLE.C_ARTID
      </if>
      , TB_COMMENT.C_CREATE_TIME
    from
        faq.TB_COMMENT
    left join
        faq.TB_USER
    on
        TB_COMMENT.C_UID = TB_USER.C_UID
    left join
    <if test="commentType==2">
        TB_ANSWER
    on
        TB_COMMENT.C_COMMON_ID=TB_ANSWER.C_ANSID
    </if>
    <if test="commentType==1">
        TB_ARTICLE
    on
        TB_COMMENT.C_COMMON_ID=TB_ARTICLE.C_ARTID
    </if>
    where
        TB_COMMENT.C_COMMON_ID=#{commentId}
    and
        TB_COMMENT.C_IS_DELETE=0
  </select>
<!--  def getCommentByQid(qid: Int): util.List[Comment]-->
  <select id="getCommentByQid" resultType="grp.faq.entity.Comment">
    select
        C_UID, C_CONTEXT, C_CREATE_TIME
    from
        faq.TB_COMMENT
    where
        C_IS_DELETE=0 and C_COM_TYPE=2 and C_COMMON_ID=#{qid}
  </select>
</mapper>
