<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grp.faq.dao.UserMapper">
  <resultMap id="BaseResultMap" type="grp.faq.entity.User">
    <constructor>
      <idArg column="C_UID" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="C_GID" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="C_ADMIN" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="C_USERNAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C_PASSWORD" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C_SCORE" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="C_LAST_LOGIN" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="C_MAIL_BOX" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C_IS_DELETE" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
<!--  def getUserRank(): util.List[User]-->
  <select id="getUserRank" resultType="grp.faq.entity.User">
    select
        C_SCORE, C_USERNAME
    from
        faq.TB_USER
    order by
        C_SCORE
    desc
    limit 10
  </select>
<!--  def updateLastLogin(@Param("date") date: Date, @Param("C_UID") cUid: Byte): Unit-->
  <update id="updateLastLogin">
    update faq.TB_USER
    set C_LAST_LOGIN=#{date}
    where C_UID=#{C_UID}
  </update>
<!--  def insert(user: User): Unit-->
  <insert id="insert" parameterType="grp.faq.entity.User">
    insert into faq.TB_USER(C_GID, C_ADMIN, C_USERNAME, C_PASSWORD, C_SCORE, C_LAST_LOGIN, C_MAIL_BOX, C_IS_DELETE)
    values(#{cGid}, #{cAdmin}, #{cUsername}, #{cPassword}, 0, null, #{cMailBox}, 0)
  </insert>
<!--  def login(@Param("username")username: String, @Param("password")password: String): User-->
  <select id="login" resultType="grp.faq.entity.User">
    select
        C_GID, C_UID, C_USERNAME, C_SCORE, C_LAST_LOGIN, C_MAIL_BOX, C_ADMIN
    from
        faq.TB_USER
    where
        C_USERNAME=#{username}
    and
        C_PASSWORD=#{password}
  </select>

<!--  def delete(@Param("user")user: User)-->
  <update id="delete">
    update faq.TB_USER
    set C_IS_DELETE=0
    where C_UID=#{cUid}
  </update>

<!--  def getAllUsers(): util.List[User]-->
  <select id="getAllUsers" resultType="grp.faq.entity.User">
    select
        C_ADMIN, C_USERNAME, C_GID, C_SCORE, C_LAST_LOGIN, C_MAIL_BOX, C_IS_DELETE
    from
        faq.TB_USER
  </select>
<!--  def findUsername(): Boolean-->
  <select id="findUsername" resultType="grp.faq.entity.User">
    select * from faq.TB_USER where C_USERNAME=#{username}
  </select>
<!--  def findUserByName(username: String): User-->
  <select id="findUserByName" resultType="grp.faq.entity.User">
    select * from faq.TB_USER where C_USERNAME = #{username}
  </select>
</mapper>