<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="grp.faq.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="grp.faq.entity.Article">
    <constructor>
      <idArg column="C_ARTID" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="C_UID" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="C_GID" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="C_ART_CONTEXT" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C_ART_TITLE" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="C_ART_CTIME" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="C_IS_DELETE" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="C_LAST_UPDATE" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="C_BROWSE_COUNT" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="C_G_X" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    C_ARTID, C_UID, C_GID, C_ART_CONTEXT, C_ART_TITLE, C_ART_CTIME, C_IS_DELETE, C_LAST_UPDATE, 
    C_BROWSE_COUNT, C_G_X
  </sql>
<!--  def getTodayAritcle(): Long-->
  <select id="getTodayAritcle" resultType="java.lang.Long">
    select
        count(C_ARTID)
    from
        faq.TB_ARTICLE
    where
      TO_DAYS(C_LAST_UPDATE) = TO_DAYS(NOW())
  </select>
<!--  def delete(cArtid: lang.Long): Boolean-->
  <update id="delete" parameterType="java.lang.Long">
    update faq.TB_ARTICLE
    set C_IS_DELETE=1
    where C_ARTID=#{cArtid}
  </update>

<!--  def updateArticle(article: Article): Boolean-->
  <update id="updateArticle" parameterType="grp.faq.entity.Article">
    update faq.TB_ARTICLE
    set
        C_LAST_UPDATE=NOW(),
        C_ART_CONTEXT=#{cArtContext},
        C_ART_TITLE=#{cArtTitle},
        C_G_X=0
    where
        C_ARTID=${cArtid}
  </update>
<!--  def getAllArticle(): List[Article]-->
  <select id="getAllArticle" resultType="grp.faq.entity.Article">
    select
        *
    from
        faq.TB_ARTICLE
  </select>
<!--    def add(article: Article): Int-->
    <insert id="add" parameterType="grp.faq.entity.Article">
        insert into
            faq.TB_ARTICLE(C_ARTID, C_UID, C_GID, C_ART_CONTEXT, C_ART_TITLE, C_ART_CTIME, C_IS_DELETE, C_LAST_UPDATE, C_BROWSE_COUNT, C_G_X)
        values (
                #{cArtid}, #{cUid}, #{cGid}, #{cArtContext}, #{cArtTitle}, NOW(), 0, NOW(), 0, 0
               )
    </insert>
<!--    def getArticleByUsername(@Param("username")username: String, @Param("index")index: Int): _root_.java.util.List[_root_.grp.faq.entity.Article] = ???-->
    <select id="getArticleByUsername" resultType="grp.faq.entity.Article">
        select
            C_ARTID, TB_ARTICLE.C_UID, TB_ARTICLE.C_GID, C_ART_CONTEXT, C_ART_TITLE, C_ART_CTIME, TB_ARTICLE.gfC_IS_DELETE, C_LAST_UPDATE, C_BROWSE_COUNT, C_G_X
        from
            faq.TB_ARTICLE
        left join
            faq.TB_USER
        on
            TB_ARTICLE.C_UID = TB_USER.C_UID
        where
            TB_USER.C_USERNAME=#{username} and TB_USER.C_IS_DELETE=0 and TB_ARTICLE.C_IS_DELETE=0
        limit
            #{index}, 10
    </select>
</mapper>
